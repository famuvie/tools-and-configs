#!/usr/bin/env python
# -*- coding: <encoding name> -*-

"""
Script to produce the export commands to load into your environment a CARTO
user information. Put a file named .cartorc.yaml on youn home folder or
provide a --config parameter with your own file.
"""

import logging
import argparse
from os.path import expanduser
import sys
import yaml

# Logger (better than print)
logging.basicConfig(
    level=logging.DEBUG,
    format=' %(asctime)s - %(levelname)s - %(message)s',
    datefmt='%I:%M:%S %p')
logger = logging.getLogger('4SQ Import')

# Parsing arguments
home = expanduser("~")
parser = argparse.ArgumentParser(description='Loads a CARTO user into your environment')
parser.add_argument('user', type=str,
                    help='Name of the user to load')
parser.add_argument('--config', dest='config_file',
                    default=home+'/.cartorc.yaml',
                    help='Configuration file to read, defaults to ~/.cartorc.yaml)')
try:
    logger.debug('Parsing...')
    args = parser.parse_args()
    logger.debug('Load config...')
    with open(args.config_file,'r') as f:
        config = yaml.load(f.read())
        if args.user in config:
            user = args.user
            user_config = config[user]
            api_key = user_config['api_key']
            if 'organization' in user_config:
                org = user_config['organization']
            else:
                org = None


            if 'url' in user_config:
                 url = user_config['url']
            else:
                url = 'https://{}.carto.com/api/'.format(user)

            print('''
export CARTO_USER={user}
export CARTO_API_KEY={api_key}
export CARTO_API_URL={url}'''.format(user=user,org=org,api_key=api_key,url=url))

            if org != None:
                print('export CARTO_ORG={org}'.format(org=org))

        else:
            raise Exception('User not found on config')

except Exception as e:
    logger.error(e.message)
    sys.exit(1)
finally:
    sys.exit(0)

